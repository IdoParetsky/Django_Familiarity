openapi: 3.0.3
info:
  title: Django_Familiarity
  version: 1.0.0
  description: Ido learning Django
tags:
  - name: 'human'
    description: 'All about humans'
paths:
  /fam/:
    get:
      operationId: fam_list
      description: 'Get all'
      tags:
      - human
      summary: 'View all humans in the database'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Human'
          description: ''
    post:
      operationId: fam_create
      description: 'Post a human'
      tags:
      - human
      summary: 'Insert a human to the database'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Human'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Human'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Human'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Human'
          description: ''
  /fam/{id}/:
    get:
      operationId: fam_retrieve
      description: 'Get(ID)'
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this human.
        required: true
      tags:
      - human
      summary: View a human from the database, by ID
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Human'
          description: ''
    put:
      operationId: fam_update
      description: 'Replace(ID)'
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this human.
        required: true
      tags:
      - human
      summary: 'Replace an existing human in the database, by ID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Human'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Human'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Human'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Human'
          description: ''
    patch:
      operationId: fam_partial_update
      description: 'Update(ID)'
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this human.
        required: true
      tags:
      - human
      summary: 'Update an existing human in the database in place, by ID'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Human'
          description: ''
    delete:
      operationId: fam_destroy
      description: 'Delete(ID)'
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this human.
        required: true
      tags:
      - human
      summary: 'Delete an existing human in the databse, by ID'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    Human:
      type: object
      properties:
        name:
          type: string
          maxLength: 50
          example: 'Johnny Hirsch (First & Last)'
        age:
          type: integer
          maximum: 120
          minimum: 0
          example: '27 (Years)'
        height:
          type: integer
          maximum: 300
          minimum: 1
          example: '176 (Centimeters)'
        weight:
          type: integer
          maximum: 999
          minimum: 1
          example: '70 (Kilograms)'
        occupation:
          type: string
          maxLength: 50
          example: 'Industrial Engineer'
      required:
      - age
      - height
      - name
      - occupation
      - weight
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: Session
